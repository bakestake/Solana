// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: node/momoToDiscovery.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

public static partial class MomoToDiscovery
{
  static readonly string __ServiceName = "MomoToDiscovery";

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
  {
    #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
    if (message is global::Google.Protobuf.IBufferMessage)
    {
      context.SetPayloadLength(message.CalculateSize());
      global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
      context.Complete();
      return;
    }
    #endif
    context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
  }

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static class __Helper_MessageCache<T>
  {
    public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
  }

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
  {
    #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
    if (__Helper_MessageCache<T>.IsBufferMessage)
    {
      return parser.ParseFrom(context.PayloadAsReadOnlySequence());
    }
    #endif
    return parser.ParseFrom(context.PayloadAsNewBuffer());
  }

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::Ping> __Marshaller_Ping = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ping.Parser));
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::Pong> __Marshaller_Pong = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Pong.Parser));
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::Register> __Marshaller_Register = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Register.Parser));
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::Ack> __Marshaller_Ack = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ack.Parser));
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::Unregister> __Marshaller_Unregister = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Unregister.Parser));
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::ProhibitMorePeers> __Marshaller_ProhibitMorePeers = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ProhibitMorePeers.Parser));
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::AllowMorePeers> __Marshaller_AllowMorePeers = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::AllowMorePeers.Parser));

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Method<global::Ping, global::Pong> __Method_pingDiscovery = new grpc::Method<global::Ping, global::Pong>(
      grpc::MethodType.Unary,
      __ServiceName,
      "pingDiscovery",
      __Marshaller_Ping,
      __Marshaller_Pong);

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Method<global::Register, global::Ack> __Method_register = new grpc::Method<global::Register, global::Ack>(
      grpc::MethodType.Unary,
      __ServiceName,
      "register",
      __Marshaller_Register,
      __Marshaller_Ack);

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Method<global::Unregister, global::Ack> __Method_unregister = new grpc::Method<global::Unregister, global::Ack>(
      grpc::MethodType.Unary,
      __ServiceName,
      "unregister",
      __Marshaller_Unregister,
      __Marshaller_Ack);

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Method<global::ProhibitMorePeers, global::Ack> __Method_prohibitMorePeers = new grpc::Method<global::ProhibitMorePeers, global::Ack>(
      grpc::MethodType.Unary,
      __ServiceName,
      "prohibitMorePeers",
      __Marshaller_ProhibitMorePeers,
      __Marshaller_Ack);

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Method<global::AllowMorePeers, global::Ack> __Method_allowMorePeers = new grpc::Method<global::AllowMorePeers, global::Ack>(
      grpc::MethodType.Unary,
      __ServiceName,
      "allowMorePeers",
      __Marshaller_AllowMorePeers,
      __Marshaller_Ack);

  /// <summary>Service descriptor</summary>
  public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
  {
    get { return global::MomoToDiscoveryReflection.Descriptor.Services[0]; }
  }

  /// <summary>Base class for server-side implementations of MomoToDiscovery</summary>
  [grpc::BindServiceMethod(typeof(MomoToDiscovery), "BindService")]
  public abstract partial class MomoToDiscoveryBase
  {
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::System.Threading.Tasks.Task<global::Pong> pingDiscovery(global::Ping request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::System.Threading.Tasks.Task<global::Ack> register(global::Register request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::System.Threading.Tasks.Task<global::Ack> unregister(global::Unregister request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::System.Threading.Tasks.Task<global::Ack> prohibitMorePeers(global::ProhibitMorePeers request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::System.Threading.Tasks.Task<global::Ack> allowMorePeers(global::AllowMorePeers request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

  }

  /// <summary>Client for MomoToDiscovery</summary>
  public partial class MomoToDiscoveryClient : grpc::ClientBase<MomoToDiscoveryClient>
  {
    /// <summary>Creates a new client for MomoToDiscovery</summary>
    /// <param name="channel">The channel to use to make remote calls.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public MomoToDiscoveryClient(grpc::ChannelBase channel) : base(channel)
    {
    }
    /// <summary>Creates a new client for MomoToDiscovery that uses a custom <c>CallInvoker</c>.</summary>
    /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public MomoToDiscoveryClient(grpc::CallInvoker callInvoker) : base(callInvoker)
    {
    }
    /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    protected MomoToDiscoveryClient() : base()
    {
    }
    /// <summary>Protected constructor to allow creation of configured clients.</summary>
    /// <param name="configuration">The client configuration.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    protected MomoToDiscoveryClient(ClientBaseConfiguration configuration) : base(configuration)
    {
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::Pong pingDiscovery(global::Ping request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return pingDiscovery(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::Pong pingDiscovery(global::Ping request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_pingDiscovery, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::Pong> pingDiscoveryAsync(global::Ping request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return pingDiscoveryAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::Pong> pingDiscoveryAsync(global::Ping request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_pingDiscovery, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::Ack register(global::Register request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return register(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::Ack register(global::Register request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_register, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::Ack> registerAsync(global::Register request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return registerAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::Ack> registerAsync(global::Register request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_register, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::Ack unregister(global::Unregister request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return unregister(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::Ack unregister(global::Unregister request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_unregister, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::Ack> unregisterAsync(global::Unregister request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return unregisterAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::Ack> unregisterAsync(global::Unregister request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_unregister, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::Ack prohibitMorePeers(global::ProhibitMorePeers request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return prohibitMorePeers(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::Ack prohibitMorePeers(global::ProhibitMorePeers request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_prohibitMorePeers, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::Ack> prohibitMorePeersAsync(global::ProhibitMorePeers request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return prohibitMorePeersAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::Ack> prohibitMorePeersAsync(global::ProhibitMorePeers request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_prohibitMorePeers, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::Ack allowMorePeers(global::AllowMorePeers request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return allowMorePeers(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::Ack allowMorePeers(global::AllowMorePeers request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_allowMorePeers, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::Ack> allowMorePeersAsync(global::AllowMorePeers request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return allowMorePeersAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::Ack> allowMorePeersAsync(global::AllowMorePeers request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_allowMorePeers, null, options, request);
    }
    /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    protected override MomoToDiscoveryClient NewInstance(ClientBaseConfiguration configuration)
    {
      return new MomoToDiscoveryClient(configuration);
    }
  }

  /// <summary>Creates service definition that can be registered with a server</summary>
  /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  public static grpc::ServerServiceDefinition BindService(MomoToDiscoveryBase serviceImpl)
  {
    return grpc::ServerServiceDefinition.CreateBuilder()
        .AddMethod(__Method_pingDiscovery, serviceImpl.pingDiscovery)
        .AddMethod(__Method_register, serviceImpl.register)
        .AddMethod(__Method_unregister, serviceImpl.unregister)
        .AddMethod(__Method_prohibitMorePeers, serviceImpl.prohibitMorePeers)
        .AddMethod(__Method_allowMorePeers, serviceImpl.allowMorePeers).Build();
  }

  /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
  /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
  /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
  /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  public static void BindService(grpc::ServiceBinderBase serviceBinder, MomoToDiscoveryBase serviceImpl)
  {
    serviceBinder.AddMethod(__Method_pingDiscovery, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Ping, global::Pong>(serviceImpl.pingDiscovery));
    serviceBinder.AddMethod(__Method_register, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Register, global::Ack>(serviceImpl.register));
    serviceBinder.AddMethod(__Method_unregister, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Unregister, global::Ack>(serviceImpl.unregister));
    serviceBinder.AddMethod(__Method_prohibitMorePeers, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::ProhibitMorePeers, global::Ack>(serviceImpl.prohibitMorePeers));
    serviceBinder.AddMethod(__Method_allowMorePeers, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::AllowMorePeers, global::Ack>(serviceImpl.allowMorePeers));
  }

}
#endregion
