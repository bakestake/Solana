// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: client/permissions.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from client/permissions.proto</summary>
public static partial class PermissionsReflection {

  #region Descriptor
  /// <summary>File descriptor for client/permissions.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static PermissionsReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChhjbGllbnQvcGVybWlzc2lvbnMucHJvdG8i7gIKC1Blcm1pc3Npb25zEhQK",
          "BWFkbWluGAEgAigIUgVhZG1pbhIeCgpjYW5Db25zdW1lGAIgAigIUgpjYW5D",
          "b25zdW1lEh4KCmNhblByb2R1Y2UYAyACKAhSCmNhblByb2R1Y2USSQoRY2Fu",
          "UHJvZHVjZVNvdXJjZXMYBCACKAsyGy5QZXJtaXNzaW9ucy5Qcm9kdWNlU291",
          "cmNlc1IRY2FuUHJvZHVjZVNvdXJjZXMSIAoLY2FuU2VuZERhdGEYBSACKAhS",
          "C2NhblNlbmREYXRhEiAKC2NhblJlY3ZEYXRhGAYgAigIUgtjYW5SZWN2RGF0",
          "YRIsChFjYW5VcGRhdGVNZXRhZGF0YRgHIAIoCFIRY2FuVXBkYXRlTWV0YWRh",
          "dGEaTAoOUHJvZHVjZVNvdXJjZXMSEAoDY2FtGAEgAigIUgNjYW0SEAoDbWlj",
          "GAIgAigIUgNtaWMSFgoGc2NyZWVuGAMgAigIUgZzY3JlZW5CTkIQUGVybWlz",
          "c2lvbnNQcm90b0gCUAFaNmdpdGh1Yi5jb20vaHVkZGxlMDEvc2hpbmlnYW1p",
          "L2FwcHMvcmVnaXN0cnkvZ2VuL2NsaWVudA=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::Permissions), global::Permissions.Parser, new[]{ "Admin", "CanConsume", "CanProduce", "CanProduceSources", "CanSendData", "CanRecvData", "CanUpdateMetadata" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Permissions.Types.ProduceSources), global::Permissions.Types.ProduceSources.Parser, new[]{ "Cam", "Mic", "Screen" }, null, null, null, null)})
        }));
  }
  #endregion

}
#region Messages
[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class Permissions : pb::IMessage<Permissions>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<Permissions> _parser = new pb::MessageParser<Permissions>(() => new Permissions());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<Permissions> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PermissionsReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public Permissions() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public Permissions(Permissions other) : this() {
    _hasBits0 = other._hasBits0;
    admin_ = other.admin_;
    canConsume_ = other.canConsume_;
    canProduce_ = other.canProduce_;
    canProduceSources_ = other.canProduceSources_ != null ? other.canProduceSources_.Clone() : null;
    canSendData_ = other.canSendData_;
    canRecvData_ = other.canRecvData_;
    canUpdateMetadata_ = other.canUpdateMetadata_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public Permissions Clone() {
    return new Permissions(this);
  }

  /// <summary>Field number for the "admin" field.</summary>
  public const int AdminFieldNumber = 1;
  private readonly static bool AdminDefaultValue = false;

  private bool admin_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Admin {
    get { if ((_hasBits0 & 1) != 0) { return admin_; } else { return AdminDefaultValue; } }
    set {
      _hasBits0 |= 1;
      admin_ = value;
    }
  }
  /// <summary>Gets whether the "admin" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAdmin {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "admin" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAdmin() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "canConsume" field.</summary>
  public const int CanConsumeFieldNumber = 2;
  private readonly static bool CanConsumeDefaultValue = false;

  private bool canConsume_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool CanConsume {
    get { if ((_hasBits0 & 2) != 0) { return canConsume_; } else { return CanConsumeDefaultValue; } }
    set {
      _hasBits0 |= 2;
      canConsume_ = value;
    }
  }
  /// <summary>Gets whether the "canConsume" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCanConsume {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "canConsume" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCanConsume() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "canProduce" field.</summary>
  public const int CanProduceFieldNumber = 3;
  private readonly static bool CanProduceDefaultValue = false;

  private bool canProduce_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool CanProduce {
    get { if ((_hasBits0 & 4) != 0) { return canProduce_; } else { return CanProduceDefaultValue; } }
    set {
      _hasBits0 |= 4;
      canProduce_ = value;
    }
  }
  /// <summary>Gets whether the "canProduce" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCanProduce {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "canProduce" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCanProduce() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "canProduceSources" field.</summary>
  public const int CanProduceSourcesFieldNumber = 4;
  private global::Permissions.Types.ProduceSources canProduceSources_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::Permissions.Types.ProduceSources CanProduceSources {
    get { return canProduceSources_; }
    set {
      canProduceSources_ = value;
    }
  }

  /// <summary>Field number for the "canSendData" field.</summary>
  public const int CanSendDataFieldNumber = 5;
  private readonly static bool CanSendDataDefaultValue = false;

  private bool canSendData_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool CanSendData {
    get { if ((_hasBits0 & 8) != 0) { return canSendData_; } else { return CanSendDataDefaultValue; } }
    set {
      _hasBits0 |= 8;
      canSendData_ = value;
    }
  }
  /// <summary>Gets whether the "canSendData" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCanSendData {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "canSendData" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCanSendData() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "canRecvData" field.</summary>
  public const int CanRecvDataFieldNumber = 6;
  private readonly static bool CanRecvDataDefaultValue = false;

  private bool canRecvData_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool CanRecvData {
    get { if ((_hasBits0 & 16) != 0) { return canRecvData_; } else { return CanRecvDataDefaultValue; } }
    set {
      _hasBits0 |= 16;
      canRecvData_ = value;
    }
  }
  /// <summary>Gets whether the "canRecvData" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCanRecvData {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "canRecvData" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCanRecvData() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "canUpdateMetadata" field.</summary>
  public const int CanUpdateMetadataFieldNumber = 7;
  private readonly static bool CanUpdateMetadataDefaultValue = false;

  private bool canUpdateMetadata_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool CanUpdateMetadata {
    get { if ((_hasBits0 & 32) != 0) { return canUpdateMetadata_; } else { return CanUpdateMetadataDefaultValue; } }
    set {
      _hasBits0 |= 32;
      canUpdateMetadata_ = value;
    }
  }
  /// <summary>Gets whether the "canUpdateMetadata" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCanUpdateMetadata {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "canUpdateMetadata" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCanUpdateMetadata() {
    _hasBits0 &= ~32;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as Permissions);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(Permissions other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Admin != other.Admin) return false;
    if (CanConsume != other.CanConsume) return false;
    if (CanProduce != other.CanProduce) return false;
    if (!object.Equals(CanProduceSources, other.CanProduceSources)) return false;
    if (CanSendData != other.CanSendData) return false;
    if (CanRecvData != other.CanRecvData) return false;
    if (CanUpdateMetadata != other.CanUpdateMetadata) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasAdmin) hash ^= Admin.GetHashCode();
    if (HasCanConsume) hash ^= CanConsume.GetHashCode();
    if (HasCanProduce) hash ^= CanProduce.GetHashCode();
    if (canProduceSources_ != null) hash ^= CanProduceSources.GetHashCode();
    if (HasCanSendData) hash ^= CanSendData.GetHashCode();
    if (HasCanRecvData) hash ^= CanRecvData.GetHashCode();
    if (HasCanUpdateMetadata) hash ^= CanUpdateMetadata.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasAdmin) {
      output.WriteRawTag(8);
      output.WriteBool(Admin);
    }
    if (HasCanConsume) {
      output.WriteRawTag(16);
      output.WriteBool(CanConsume);
    }
    if (HasCanProduce) {
      output.WriteRawTag(24);
      output.WriteBool(CanProduce);
    }
    if (canProduceSources_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(CanProduceSources);
    }
    if (HasCanSendData) {
      output.WriteRawTag(40);
      output.WriteBool(CanSendData);
    }
    if (HasCanRecvData) {
      output.WriteRawTag(48);
      output.WriteBool(CanRecvData);
    }
    if (HasCanUpdateMetadata) {
      output.WriteRawTag(56);
      output.WriteBool(CanUpdateMetadata);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasAdmin) {
      output.WriteRawTag(8);
      output.WriteBool(Admin);
    }
    if (HasCanConsume) {
      output.WriteRawTag(16);
      output.WriteBool(CanConsume);
    }
    if (HasCanProduce) {
      output.WriteRawTag(24);
      output.WriteBool(CanProduce);
    }
    if (canProduceSources_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(CanProduceSources);
    }
    if (HasCanSendData) {
      output.WriteRawTag(40);
      output.WriteBool(CanSendData);
    }
    if (HasCanRecvData) {
      output.WriteRawTag(48);
      output.WriteBool(CanRecvData);
    }
    if (HasCanUpdateMetadata) {
      output.WriteRawTag(56);
      output.WriteBool(CanUpdateMetadata);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasAdmin) {
      size += 1 + 1;
    }
    if (HasCanConsume) {
      size += 1 + 1;
    }
    if (HasCanProduce) {
      size += 1 + 1;
    }
    if (canProduceSources_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(CanProduceSources);
    }
    if (HasCanSendData) {
      size += 1 + 1;
    }
    if (HasCanRecvData) {
      size += 1 + 1;
    }
    if (HasCanUpdateMetadata) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(Permissions other) {
    if (other == null) {
      return;
    }
    if (other.HasAdmin) {
      Admin = other.Admin;
    }
    if (other.HasCanConsume) {
      CanConsume = other.CanConsume;
    }
    if (other.HasCanProduce) {
      CanProduce = other.CanProduce;
    }
    if (other.canProduceSources_ != null) {
      if (canProduceSources_ == null) {
        CanProduceSources = new global::Permissions.Types.ProduceSources();
      }
      CanProduceSources.MergeFrom(other.CanProduceSources);
    }
    if (other.HasCanSendData) {
      CanSendData = other.CanSendData;
    }
    if (other.HasCanRecvData) {
      CanRecvData = other.CanRecvData;
    }
    if (other.HasCanUpdateMetadata) {
      CanUpdateMetadata = other.CanUpdateMetadata;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Admin = input.ReadBool();
          break;
        }
        case 16: {
          CanConsume = input.ReadBool();
          break;
        }
        case 24: {
          CanProduce = input.ReadBool();
          break;
        }
        case 34: {
          if (canProduceSources_ == null) {
            CanProduceSources = new global::Permissions.Types.ProduceSources();
          }
          input.ReadMessage(CanProduceSources);
          break;
        }
        case 40: {
          CanSendData = input.ReadBool();
          break;
        }
        case 48: {
          CanRecvData = input.ReadBool();
          break;
        }
        case 56: {
          CanUpdateMetadata = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Admin = input.ReadBool();
          break;
        }
        case 16: {
          CanConsume = input.ReadBool();
          break;
        }
        case 24: {
          CanProduce = input.ReadBool();
          break;
        }
        case 34: {
          if (canProduceSources_ == null) {
            CanProduceSources = new global::Permissions.Types.ProduceSources();
          }
          input.ReadMessage(CanProduceSources);
          break;
        }
        case 40: {
          CanSendData = input.ReadBool();
          break;
        }
        case 48: {
          CanRecvData = input.ReadBool();
          break;
        }
        case 56: {
          CanUpdateMetadata = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the Permissions message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
    public sealed partial class ProduceSources : pb::IMessage<ProduceSources>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<ProduceSources> _parser = new pb::MessageParser<ProduceSources>(() => new ProduceSources());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<ProduceSources> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::Permissions.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ProduceSources() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ProduceSources(ProduceSources other) : this() {
        _hasBits0 = other._hasBits0;
        cam_ = other.cam_;
        mic_ = other.mic_;
        screen_ = other.screen_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ProduceSources Clone() {
        return new ProduceSources(this);
      }

      /// <summary>Field number for the "cam" field.</summary>
      public const int CamFieldNumber = 1;
      private readonly static bool CamDefaultValue = false;

      private bool cam_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Cam {
        get { if ((_hasBits0 & 1) != 0) { return cam_; } else { return CamDefaultValue; } }
        set {
          _hasBits0 |= 1;
          cam_ = value;
        }
      }
      /// <summary>Gets whether the "cam" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasCam {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "cam" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearCam() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "mic" field.</summary>
      public const int MicFieldNumber = 2;
      private readonly static bool MicDefaultValue = false;

      private bool mic_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Mic {
        get { if ((_hasBits0 & 2) != 0) { return mic_; } else { return MicDefaultValue; } }
        set {
          _hasBits0 |= 2;
          mic_ = value;
        }
      }
      /// <summary>Gets whether the "mic" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasMic {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "mic" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearMic() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "screen" field.</summary>
      public const int ScreenFieldNumber = 3;
      private readonly static bool ScreenDefaultValue = false;

      private bool screen_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Screen {
        get { if ((_hasBits0 & 4) != 0) { return screen_; } else { return ScreenDefaultValue; } }
        set {
          _hasBits0 |= 4;
          screen_ = value;
        }
      }
      /// <summary>Gets whether the "screen" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasScreen {
        get { return (_hasBits0 & 4) != 0; }
      }
      /// <summary>Clears the value of the "screen" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearScreen() {
        _hasBits0 &= ~4;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as ProduceSources);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(ProduceSources other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Cam != other.Cam) return false;
        if (Mic != other.Mic) return false;
        if (Screen != other.Screen) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasCam) hash ^= Cam.GetHashCode();
        if (HasMic) hash ^= Mic.GetHashCode();
        if (HasScreen) hash ^= Screen.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasCam) {
          output.WriteRawTag(8);
          output.WriteBool(Cam);
        }
        if (HasMic) {
          output.WriteRawTag(16);
          output.WriteBool(Mic);
        }
        if (HasScreen) {
          output.WriteRawTag(24);
          output.WriteBool(Screen);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasCam) {
          output.WriteRawTag(8);
          output.WriteBool(Cam);
        }
        if (HasMic) {
          output.WriteRawTag(16);
          output.WriteBool(Mic);
        }
        if (HasScreen) {
          output.WriteRawTag(24);
          output.WriteBool(Screen);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasCam) {
          size += 1 + 1;
        }
        if (HasMic) {
          size += 1 + 1;
        }
        if (HasScreen) {
          size += 1 + 1;
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(ProduceSources other) {
        if (other == null) {
          return;
        }
        if (other.HasCam) {
          Cam = other.Cam;
        }
        if (other.HasMic) {
          Mic = other.Mic;
        }
        if (other.HasScreen) {
          Screen = other.Screen;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              Cam = input.ReadBool();
              break;
            }
            case 16: {
              Mic = input.ReadBool();
              break;
            }
            case 24: {
              Screen = input.ReadBool();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              Cam = input.ReadBool();
              break;
            }
            case 16: {
              Mic = input.ReadBool();
              break;
            }
            case 24: {
              Screen = input.ReadBool();
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

#endregion


#endregion Designer generated code
